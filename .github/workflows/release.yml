name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install system dependencies for skia-canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libcairo2-dev \
            libpango1.0-dev \
            libjpeg-dev \
            libgif-dev \
            librsvg2-dev \
            libpixman-1-dev \
            pkg-config \
            python3 \
            make \
            g++ \
            libstdc++6

      - name: Install dependencies
        run: bun install

      - name: Rebuild native modules
        env:
          NODE_ENV: production
          SKIA_CANVAS_USE_SYSTEM_LIBRARIES: 1
        run: |
          cd node_modules/skia-canvas && npm rebuild
          cd ../..
          node -e "console.log('Testing skia-canvas import...'); require('skia-canvas'); console.log('✅ skia-canvas loaded successfully')"

      - name: Build action
        run: bun run build

      - name: Verify build
        run: |
          echo "Checking built files..."
          ls -la dist/
          echo "Testing action execution..."
          node -e "console.log('Testing action import...'); import('./dist/action.js').then(() => console.log('✅ Action loaded successfully')).catch(err => { console.error('❌ Action load failed:', err.message); process.exit(1); })"

      - name: Bump version
        id: bump
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump version
          NEW_VERSION=$(npm version ${{ github.event.inputs.version }} --no-git-tag-version)
          echo "New version: $NEW_VERSION"
          
          # Remove 'v' prefix if present
          NEW_VERSION=${NEW_VERSION#v}
          echo "Cleaned version: $NEW_VERSION"
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          release_name: Release v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/action.js
          asset_name: action.js
          asset_content_type: application/javascript

      - name: Upload Release Assets - Collectors
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/collectors/
          asset_name: collectors.zip
          asset_content_type: application/zip

      - name: Upload Release Assets - Summaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/summaries/
          asset_name: summaries.zip
          asset_content_type: application/zip

      - name: Upload Release Assets - Utils
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/utils.js
          asset_name: utils.js
          asset_content_type: application/javascript

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
          git push

      - name: Create and push tag
        run: |
          git tag v${{ steps.bump.outputs.new_version }}
          git push origin v${{ steps.bump.outputs.new_version }}

      - name: Update action.yml version reference
        run: |
          # Update the action.yml to reference the new version
          sed -i "s/uses: LukeHagar\/usage-statistics@v[0-9]*\.[0-9]*\.[0-9]*/uses: LukeHagar\/usage-statistics@v${{ steps.bump.outputs.new_version }}/g" .github/workflows/test-action-local.yml
          git add .github/workflows/test-action-local.yml
          git commit -m "chore: update test workflow to use v${{ steps.bump.outputs.new_version }}" || echo "No changes to commit"
          git push

      - name: Comment on release
        run: |
          echo "## 🎉 Release v${{ steps.bump.outputs.new_version }} Published!"
          echo ""
          echo "### What's New:"
          echo "- Version bumped from ${{ steps.bump.outputs.current_version }} to ${{ steps.bump.outputs.new_version }}"
          echo "- Action built and tested successfully"
          echo "- Release assets uploaded"
          echo ""
          echo "### Usage:"
          echo "Update your workflows to use:"
          echo "```yaml"
          echo "uses: LukeHagar/usage-statistics@v${{ steps.bump.outputs.new_version }}"
          echo "```"
